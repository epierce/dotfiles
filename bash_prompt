# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

# For reference: tto view all 256 colors
# ( x=`tput op` y=`printf %$((${COLUMNS}-6))s`;for i in {0..256};do o=00$i;echo -e ${o:${#o}-3:3} `tput setaf $i;tput setab $i`${y// /=}$x;done; )

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		RED=$(tput setaf 9)
		ORANGE=$(tput setaf 172)
		GREEN=$(tput setaf 34)
		PURPLE=$(tput setaf 141)
		WHITE=$(tput setaf 255)
        BLUE=$(tput setaf 21)
	else
		RED=$(tput setaf 5)
		ORANGE=$(tput setaf 4)
		GREEN=$(tput setaf 2)
		PURPLE=$(tput setaf 1)
		WHITE=$(tput setaf 7)
	fi
	BOLD=$(tput bold)
    DIM=$(tput dim)
	RESET=$(tput sgr0)
    REV=$(tput rev)
    SMSO=$(tput smso)
    RMSO=$(tput rmso)
    
    BLACKBG=$(tput setab 0)
    REDBG=$(tput setab 9)
    WHITEBG=$(tput setab 255)
    BLUEBG=$(tput setab 21)
    GREENBG=$(tput setab 34)
else
	RED="\033[1;31m"
	ORANGE="\033[1;33m"
	GREEN="\033[1;32m"
	PURPLE="\033[1;35m"
	WHITE="\033[1;37m"
	BOLD=""
	RESET="\033[m"
fi

HOSTNAME="`echo $HOSTNAME|tr '[a-z]' '[A-Z]'`"
SEPARATOR="--------------------------------------------------------------------------------"
if [ $(id -u) -eq 0 ]; then
    USERPROMPT='#'
else
    USERPROMPT='$'
fi

function parse_git_dirty() {
	[[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

case $ENVIRONMENT in
    'production')
        LINE1="\[${BOLD}${RED}\]${SEPARATOR}"
        LINE2="\[${BOLD}${WHITE}${REDBG}\]\u@\${HOSTNAME}\[$RESET\] in \[$GREEN\]\w\[$RESET\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$RESET\]"
        LINE3="\${USERPROMPT}"
    ;;

    'test')
        LINE1="\[${BOLD}${BLUE}\]${SEPARATOR}"
        LINE2="\[${BOLD}${WHITE}${BLUEBG}\]\u@\${HOSTNAME}\[$RESET\] in \[$GREEN\]\w\[$RESET\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$RESET\]"
        LINE3="\${USERPROMPT}"
    ;;

    *)
        LINE1="\[${BOLD}${GREEN}\]${SEPARATOR}"
        LINE2="\[${BOLD}${WHITE}${GREENBG}\]\u@\${HOSTNAME}\[$RESET\] in \[$GREEN\]\w\[$RESET\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$PURPLE\]\$(parse_git_branch)\[$RESET\]"
        LINE3="\${USERPROMPT}"
    ;;
esac

#set the prompt
PS1="${LINE1}\n${LINE2}\n${LINE3} "
